- name: deploy onelove
  sudo: yes
  sudo_user: "{{ api_user }}"
  git:
    repo: https://github.com/one-love/api
    dest: /var/www/onelove
    accept_hostkey: yes
    depth: 1
  notify:
    - restart uwsgi
  tags:
    - deploy

- name: configure api server
  sudo: yes
  template:
    src: __init__.py.j2
    dest: /var/www/onelove/project/settings/__init__.py
    owner: "{{ api_user }}"
    group: "{{ api_user }}"
  notify:
    - restart uwsgi

- name: ensure /vagrant/projects exists
  when: '"vagrant" in group_names'
  file:
    path: vagrant/projects
    state: directory

- name: deploy onelove to /vagrant
  when: '"vagrant" in group_names'
  command: git clone https://github.com/one-love/api /vagrant/projects/api
  args:
    creates: /vagrant/projects/api
  notify:
    - change origin

- name: configure api server for development
  when: '"vagrant" in group_names'
  sudo: yes
  template:
    src: __init__.py.j2
    dest: /vagrant/projects/api/project/settings/__init__.py
    owner: "{{ api_user }}"
    group: "{{ api_user }}"

- name: install common pip packages
  sudo: yes
  sudo_user: "{{ api_user }}"
  pip:
    requirements: /var/www/onelove/requirements_common.txt
    virtualenv: "~{{ api_user }}/.virtualenvs/api"
    state: present

- name: install production pip packages
  sudo: yes
  sudo_user: "{{ api_user }}"
  pip:
    requirements: /var/www/onelove/requirements_prod.txt
    virtualenv: "~{{ api_user }}/.virtualenvs/api"
    state: present

- name: install development pip packages
  sudo: yes
  sudo_user: "{{ api_user }}"
  when: '"vagrant" in group_names'
  pip:
    requirements: /vagrant/projects/api/requirements_dev.txt
    virtualenv: "~{{ api_user }}/.virtualenvs/api"
    state: present

- name: install test pip packages
  sudo: yes
  sudo_user: "{{ api_user }}"
  when: '"vagrant" in group_names'
  pip:
    requirements: /vagrant/projects/api/requirements_test.txt
    virtualenv: "~{{ api_user }}/.virtualenvs/api"
    state: present

- name: collect static files
  sudo: yes
  sudo_user: "{{ api_user }}"
  django_manage:
    command: collectstatic
    app_path: /var/www/onelove
    virtualenv: "~{{ api_user }}/.virtualenvs/api"
  tags:
    - deploy

- name: remove .pyc files
  sudo: yes
  sudo_user: "{{ api_user }}"
  command: find . -name '*.pyc' -delete chdir=/var/www/onelove
  notify:
    - restart uwsgi
  tags:
    - deploy

- name: migrate DB
  sudo: yes
  sudo_user: "{{ api_user }}"
  django_manage:
    app_path: /var/www/onelove
    command: migrate
    virtualenv: "~{{ api_user }}/.virtualenvs/api"
